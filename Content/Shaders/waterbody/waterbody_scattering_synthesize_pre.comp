#version 430
layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

#include "waterbody_constants.incl"
uniform sampler3D MultiScatteringLUTs[NUM_SCATTERING_ORDERS];
uniform sampler3D ScatteringDensityLUTs[NUM_SCATTERING_ORDERS];
layout (rgba32f, binding=0) uniform image3D ScatteringLUT;
layout (rgba32f, binding=1) uniform image3D MultiScatteringDensityLUT;



void main()
{
    vec3 frag_coord = vec3(gl_GlobalInvocationID) + vec3(0.5);
    vec3 scattering_texture_size = vec3(WATER_SCATTERING_TEXTURE_WIDTH, WATER_SCATTERING_TEXTURE_HEIGHT, WATER_SCATTERING_TEXTURE_DEPTH);
    vec3 uv = frag_coord / scattering_texture_size;
    vec3 value = vec3(0);
    vec3 density = vec3(0);
    for (int i = 0; i < NUM_SCATTERING_ORDERS; i++)
    {
        value += texture(MultiScatteringLUTs[i], uv).rgb;
        density += texture(ScatteringDensityLUTs[i], uv).rgb;
    }
//    value += texture(MultiScatteringLUTs[0], uv).rgb;
//    value += texture(MultiScatteringLUTs[1], uv).rgb;
//    value += texture(MultiScatteringLUTs[2], uv).rgb;
//    value += texture(MultiScatteringLUTs[3], uv).rgb;
    imageStore(ScatteringLUT, ivec3(gl_GlobalInvocationID), vec4(value, 0));
    imageStore(MultiScatteringDensityLUT, ivec3(gl_GlobalInvocationID), vec4(density/*texture(ScatteringDensityLUTs[3], uv).rgb*/, 0));
}