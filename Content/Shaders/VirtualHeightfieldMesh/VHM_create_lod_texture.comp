#version 460
layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#include "VHM_WorldLODParam.glsl"

layout(std430, binding=1) readonly buffer NodeDescription_Buffer{
    uint NodeDevided[];
};

layout(std430, binding=2) readonly buffer LODParams_Buffer{
    WorldLODParam LODParams[];
};
layout(r16f, binding=3) uniform image2D LODMap;


layout (std140, binding=4) uniform FQuadTreeParameters {
    uvec2   NodeCount;
    uint    LODNum;
    uint    NumQuadsPerPatch;
    uint    NumPatchesPerNode;
	uint	NumHeightfieldTextureMipmap;
};

uvec2 fromSectorLoctoNodeLoc(uvec2 sector_loc, uint lod)
{
    return sector_loc / uint(pow(2, lod));
}
void main()
{
    for (uint lod = LODNum-1; lod >= 0; lod--)
    {
        uvec2 nodeLoc = fromSectorLoctoNodeLoc(gl_GlobalInvocationID.xy, lod);
        uint index = fromNodeLoctoNodeDescriptionIndex(nodeLoc, lod, LODParams[lod]);
        if (NodeDevided[index] == 0)
        {
            imageStore(LODMap, ivec2(gl_GlobalInvocationID.xy), vec4(lod));
            break;
        }
    }
}