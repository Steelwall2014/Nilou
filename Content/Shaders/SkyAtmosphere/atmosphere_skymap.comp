#version 430 core
layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#include "atmosphere_functions.glsl"

layout (std140, binding=0) uniform SkyMapParameters {
    vec3 SunLightDir;
    vec2 SkyMapSize;
};
#include "../include/Macros.glsl"
layout (binding=1) uniform sampler2D TransmittanceLUT;
layout (binding=2) uniform sampler3D SingleScatteringRayleighLUT;
layout (binding=3) uniform sampler3D SingleScatteringMieLUT;

layout (rgba32f, binding=4) uniform image2D SkyMap;



void main()
{
    vec3 sun_direction = -normalize(SunLightDir);
    vec2 xy = (vec2(gl_GlobalInvocationID.xy)+vec2(0.5)) / SkyMapSize;
    vec3 v = GetViewVectorFromUV(xy);
    vec3 color = GetSkyColor(ATMOSPHERE, TransmittanceLUT, SingleScatteringRayleighLUT, SingleScatteringMieLUT, -earth_center.z, v, 0, sun_direction, ATMOSPHERE.sun_angular_radius);
//	color = hdr(color, 10);
    imageStore(SkyMap, ivec2(gl_GlobalInvocationID), vec4(color, 1.0f));
}