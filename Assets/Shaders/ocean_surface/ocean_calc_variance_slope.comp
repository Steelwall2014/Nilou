#version 430
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
    
layout (rgba32f, binding = 0) uniform image2D InputRT;
layout (rgba32f, binding = 1) uniform image2D OutputRT;
layout (rgba32f, binding = 2) uniform image2D SlopeSum;

uniform uint N;
uniform bool IsInit;

void main()
{
    if (IsInit)
    {
        vec2 mean_slope = 
            imageLoad(SlopeSum, ivec2(0, 0)).xy + imageLoad(SlopeSum, ivec2(0, 1)).xy + 
            imageLoad(SlopeSum, ivec2(1, 0)).xy + imageLoad(SlopeSum, ivec2(1, 1)).xy;
        mean_slope /= float(N) * float(N);
        vec2 slope = imageLoad(InputRT, ivec2(gl_GlobalInvocationID.xy)).xy;
        imageStore(OutputRT, ivec2(gl_GlobalInvocationID.xy), vec4((slope - mean_slope) * (slope - mean_slope), 0, 0));
    }
    else
    {
        vec2 slope1 = imageLoad(InputRT, ivec2(gl_GlobalInvocationID.xy) * 2).xy;
        vec2 slope2 = imageLoad(InputRT, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(1, 0)).xy;
        vec2 slope3 = imageLoad(InputRT, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(0, 1)).xy;
        vec2 slope4 = imageLoad(InputRT, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(1, 1)).xy;
        imageStore(OutputRT, ivec2(gl_GlobalInvocationID.xy), vec4(slope1 + slope2 + slope3 + slope4, 0, 0));
    }
}